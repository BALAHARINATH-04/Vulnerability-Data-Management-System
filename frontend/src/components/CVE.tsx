import React, { useEffect, useState } from "react"
import { Container, Row, Col, Table } from "react-bootstrap"
import usernameCred from "../models/username"
import listCred from "../models/listCred"
import styles from "../utilities/home.module.css"
import {useNavigate, useParams} from "react-router-dom"
import CVEData from "../models/cveModel"
// import Pagination from "./pagination"

const CVE:React.FC<usernameCred>=({username})=>{

    const cveIdProp=useParams()

    const navigate=useNavigate()

    const [showMenu, setShowMenu] = useState(false);
    const [year, setYear] = useState("");
    const [cveid, setCveid] = useState("");
    const [score, setScore] = useState("");
    const [NDays, setNDays] = useState("");

    const [listCredentials,setListCredentials]=useState<CVEData>({
            id: "",
            description: {
                lang: "",
                value: ""
            },
            baseSeverity: [],
            baseScore: [],
            impactScore: [],
            exploitabilityScore: [],
            accessVector: [],
            accessComplexity: [],
            authentication: [],
            confidentialityImpact: [],
            integrityImpact: [],
            availabilityImpact: [],
            vectorString: [],
            cpeMatch: {
                vulnerable:false,
                criteria:"",
                matchCriteriaId:""
            }
    })
    useEffect(()=>{
        const getList=async()=>{
            const cvelist=await fetch(`http://localhost:5000/vms/vulnerabilityRoute/list/cveid/${cveIdProp.id}`,{
                method:"POST",
                headers:{
                    "Content-Type":"application/json",
                },
                credentials:"include",
            })
            const cvelistResponse=await cvelist.json()
            setListCredentials(prev=>({
                ...prev,...cvelistResponse.message[0]
            }))
        }
        getList()
    },[cveIdProp])

    const handleShow=()=>{
        setShowMenu(true)
    }

    const handleClose=()=>{
        setShowMenu(false)
    }

    const handleYearChange=(e:React.ChangeEvent<HTMLInputElement>)=>{
        setYear(e.target.value)
    }

    const handleYearSubmit=()=>{
        navigate(`/cves/list/year/${year}`)
    }

    // const handleIDChange=(e:React.ChangeEvent<HTMLInputElement>)=>{
    //     setCveid(e.target.value)
    // }

    // const handleIDSubmit=()=>{
    //     navigate(`/cves/list/${cveid}`)
    // }

    const handleScoreChange=(e:React.ChangeEvent<HTMLInputElement>)=>{
        setScore(e.target.value)
    }

    const handleScoreSubmit=()=>{

    }

    const handleNDaysChange=(e:React.ChangeEvent<HTMLInputElement>)=>{
        setNDays(e.target.value)
    }

    const handleNDaysSubmit=()=>{

    }

    const handleLogout=()=>{
        const logout=async()=>{
            const logoutReq=await fetch("http://localhost:5000/vms/loginRoute/logout",{
                method:"POST",
                headers:{
                    "Content-Type":"application/json",
                },
                credentials:"include",
            })
            const logoutRes=await logoutReq.json()
            if(logoutRes.message==="Logged out successfully"){
                navigate("/")
            }
        }
        logout()
    }
    console.log(listCredentials.cpeMatch)
    return (
        <>
        <Container className={`${styles.CVEContainer} border border-dark rounded px-5 py-4`}>
            <Row>
                <Col className="d-flex justify-content-start mb-2" xl={12}>
                    <h1><b>{listCredentials.id}</b></h1>
                </Col>
                <Col className="d-flex justify-content-start mb-1" xl={12}>
                    <h5><b>Description:</b></h5>
                </Col>
                <Col className="d-flex justify-content-start mb-2" xl={12}>
                    <h6>{listCredentials.description.value}</h6>
                </Col>
                <Col className="d-flex justify-content-start mb-1" xl={12}>
                    <h5><b>CVSS V2 Metrics:</b></h5>
                </Col>
                <Col className="d-flex justify-content-start mb-2" xl={12}>
                    <Row>
                        <Col xl="4"><h6><b>Severity: </b>{listCredentials.baseSeverity}</h6></Col>
                        <Col xl="6"><h6><b>Score: </b>{listCredentials.baseScore}</h6></Col>
                        <Col xl="8"><h6><b>Vector String: </b>{listCredentials.vectorString}</h6></Col>
                    </Row>
                </Col>
                <Col className="d-flex justify-content-start mb-2" xl={12}>
                    <Table bordered className={`mb-2`}>
                        <thead>
                            <tr>
                                <th>Access vector</th>
                                <th>Access Complexity</th>
                                <th>Authentication</th>
                                <th>Confidentiality Impact</th>
                                <th>Integrity Impact</th>
                                <th>Availability Impact</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>{listCredentials.accessVector}</td>
                                <td>{listCredentials.accessComplexity}</td>
                                <td>{listCredentials.authentication}</td>
                                <td>{listCredentials.confidentialityImpact}</td>
                                <td>{listCredentials.integrityImpact}</td>
                                <td>{listCredentials.availabilityImpact}</td>
                            </tr>
                        </tbody>
                    </Table>
                </Col>
                <Col className="d-flex justify-content-start mb-2" xl={12}>
                    <h5><b>Scores:</b></h5>
                </Col>
                <Col className="d-flex justify-content-start mb-1" xl={12}>
                    <h6><b>Exploitability Score: {listCredentials.exploitabilityScore}</b></h6>
                </Col>
                <Col className="d-flex justify-content-start mb-2" xl={12}>
                    <h6><b>Impact cores:</b> {listCredentials.impactScore}</h6>
                </Col>
                <Col className="d-flex justify-content-start mb-2" xl={12}>
                    <Table bordered className={`mb-2`}>
                        <thead>
                            <tr>
                                <th>Criteria</th>
                                <th>Match Criteria ID</th>
                                <th>Vulnerable</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>{listCredentials.cpeMatch.criteria}</td>
                                <td>{listCredentials.cpeMatch.matchCriteriaId}</td>
                                <td>{(listCredentials.cpeMatch.vulnerable).toString()}</td>
                            </tr>        
                        </tbody>
                    </Table>
                </Col>
            </Row>
        </Container>
      </>
    )
}

export default CVE